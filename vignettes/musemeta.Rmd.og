---
title: musemeta introduction
author: Scott Chamberlain
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
    %\VignetteIndexEntry{musemeta introduction}
    %\VignetteEngine{knitr::rmarkdown}
    %\VignetteEncoding{UTF-8}
---

```{r echo=FALSE}
library("knitr")
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
   lines <- options$output.lines
   if (is.null(lines)) {
     return(hook_output(x, options))  # pass to default hook
   }
   x <- unlist(strsplit(x, "\n"))
   more <- "..."
   if (length(lines)==1) {        # first n lines
     if (length(x) > lines) {
       # truncate the output, but add ....
       x <- c(head(x, lines), more)
     }
   } else {
     x <- c(if (abs(lines[1])>1) more else NULL,
            x[lines],
            if (length(x)>lines[abs(length(lines))]) more else NULL
           )
   }
   # paste these lines together
   x <- paste(c(x, ""), collapse = "\n")
   hook_output(x, options)
})
knitr::opts_chunk$set(
  comment = "#>",
  collapse = TRUE,
  warning = FALSE,
  message = FALSE
)
```

Currently `musemeta` can get data from:

* [The Metropolitan Museum of Art](http://www.metmuseum.org/) via
    * scraping the MET website (see function `met()`)
    * http://scrapi.org (see functions `scrapi_()`)
* The [Canadian Science & Technology Museum Corporation](http://techno-science.ca/en/index.php) (CSTMC) (see functions `cstmc_()`)
* The [National Gallery of Art](http://www.nga.gov/content/ngaweb.html) (NGA) (see function `nga()`)
* The [Getty Museum](http://www.getty.edu/) (see function `getty()`)
* The [Art Institute of Chicago](http://www.artic.edu/) (see function `aic()`)

Other sources of museum metadata will be added...check back later & see [issues](https://github.com/ropensci/musemeta/issues).

## Install

```{r eval=FALSE}
install.packages("musemeta")
```

OR

```{r eval=FALSE}
remotes::install_github("ropensci/musemeta")
```

```{r}
library("musemeta")
```

## MET data

To get actual metadata for an object, you can use `met()` or `scrapi_get()` functions. The latter gets much more data, and uses a REST API, while the former scrapes the html directly, and can be more fragile with any changes in the html on the site.

### Scraping site directly

Data for a single object

```{r}
met(559490)
```

Or index to name of object, or values in the description

```{r}
met(559490)$name
```

```{r}
met(559490)$values[1:2]
```

A different object

```{r}
met(246562)
```

Get many objects

```{r output.lines = 1:10}
lapply(c(479283, 228901, 436876), met)
```

### Using the scrapi API

> Note: the `/random` endpoint is down.

This is again, for The Metropolitan Museum of Art only

Get a specific object

```{r output.lines = 1:10}
scrapi_info(123, fields = c('title', 'primaryArtistNameOnly', 'medium'))
```

Search for objects

```{r output.lines = 1:10}
scrapi_search(query = 'mirror')
```

Get an object, with a scrapi.org url

```{r}
out <- scrapi_get("http://scrapi.org/object/427581")
out$primaryArtist
```

or an object id

```{r}
out <- scrapi_get(427581)
out$primaryArtist
```

## CSTMC data

List changes

```{r output.lines = 1:10}
cstmc_changes(limit = 1)
```

List datasets

```{r output.lines = 1:10}
cstmc_datasets(as = "table")
```

Search for packages

```{r}
out <- cstmc_package_search(q = '*:*', rows = 2, as = 'table')
lapply(out$results$resources, function(x) x[,1:3])
```

## National Gallery of Art (NGA)

Get metadata for a single object

```{r output.lines = 1:10}
nga(id = 33267)
```

Get metadata for many objects

```{r output.lines = 1:10}
lapply(c(143679,27773,28487), nga)
```

There is no search functionality yet for this source.

## Getty Museum

Get metadata for a single object

```{r output.lines = 1:10}
getty(id = 140725)
```

Get metadata for many objects

```{r output.lines = 1:10} 
lapply(c(140725,8197), getty)
```

There is no search functionality yet for this source.

## Art Institute of Chicago

Get metadata for a single object

```{r output.lines = 1:10}
aic(41033)
```

Get metadata for many objects

```{r output.lines = 1:10}
lapply(c(41033,210804), aic)
```

There is no search functionality yet for this source.

## Asian Art Museum of San Francisco

Get metadata for a single object

```{r output.lines = 1:10}
aam(11462)
```

Get metadata for many objects

```{r output.lines = 1:10}
lapply(c(17150,17140,17144), aam)
```

There is no search functionality yet for this source.
